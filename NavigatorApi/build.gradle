apply plugin: 'com.android.library'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha3'

    implementation project(':BaseCommon')
}

//task to delete the old jar
task deleteOldJar(type: Delete) {
    delete '../NavigatorCompiler/libs/NavigatorApi.jar'
}

//task to export contents as jar
task exportJar(type: Copy) {
    from('build/intermediates/packaged-classes/release/')
    include('classes.jar')
    ///Rename the jar
    rename('classes.jar', 'NavigatorApi.jar')
    //导出的jar文件的存放目录（未指定则默认存放在build/libs下）
    destinationDir = file('../NavigatorCompiler/libs')
}

exportJar.dependsOn(deleteOldJar, build)
